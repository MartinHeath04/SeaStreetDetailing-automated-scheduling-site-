
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  durationMin: 'durationMin',
  basePriceCents: 'basePriceCents',
  active: 'active'
};

exports.Prisma.AddOnScalarFieldEnum = {
  id: 'id',
  name: 'name',
  priceCents: 'priceCents',
  durationMin: 'durationMin',
  active: 'active'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  customerName: 'customerName',
  email: 'email',
  phone: 'phone',
  serviceId: 'serviceId',
  addOnIds: 'addOnIds',
  startAtUtc: 'startAtUtc',
  endAtUtc: 'endAtUtc',
  address: 'address',
  notes: 'notes',
  status: 'status',
  priceCents: 'priceCents',
  stripePaymentIntentId: 'stripePaymentIntentId',
  gcalEventId: 'gcalEventId',
  createdAt: 'createdAt'
};

exports.Prisma.UnavailabilityScalarFieldEnum = {
  id: 'id',
  startAtUtc: 'startAtUtc',
  endAtUtc: 'endAtUtc',
  reason: 'reason'
};

exports.Prisma.SmsLogScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  direction: 'direction',
  toNumber: 'toNumber',
  body: 'body',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  amountCents: 'amountCents',
  status: 'status',
  providerRef: 'providerRef',
  paidAt: 'paidAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.BookingStatus = exports.$Enums.BookingStatus = {
  pending: 'pending',
  pending_payment: 'pending_payment',
  confirmed: 'confirmed',
  cancelled: 'cancelled',
  payment_failed: 'payment_failed'
};

exports.SmsDirection = exports.$Enums.SmsDirection = {
  inbound: 'inbound',
  outbound: 'outbound'
};

exports.Prisma.ModelName = {
  Service: 'Service',
  AddOn: 'AddOn',
  Booking: 'Booking',
  Unavailability: 'Unavailability',
  SmsLog: 'SmsLog',
  Payment: 'Payment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/martinheath/SeaStreetDetailing-main/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/martinheath/SeaStreetDetailing-main/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Service {\n  id             String  @id @default(cuid())\n  name           String\n  durationMin    Int     @map(\"duration_min\")\n  basePriceCents Int     @map(\"base_price_cents\")\n  active         Boolean @default(true)\n\n  bookings Booking[]\n\n  @@map(\"service\")\n}\n\nmodel AddOn {\n  id          String  @id @default(cuid())\n  name        String\n  priceCents  Int     @default(0) @map(\"price_cents\")\n  durationMin Int     @default(0) @map(\"duration_min\")\n  active      Boolean @default(true)\n\n  @@map(\"addon\")\n}\n\nmodel Booking {\n  id                    String        @id @default(cuid())\n  customerName          String        @map(\"customer_name\")\n  email                 String\n  phone                 String\n  serviceId             String        @map(\"service_id\")\n  addOnIds              String        @default(\"[]\") @map(\"add_on_ids\") // JSON string array\n  startAtUtc            DateTime      @map(\"start_at_utc\")\n  endAtUtc              DateTime      @map(\"end_at_utc\")\n  address               String\n  notes                 String?\n  status                BookingStatus\n  priceCents            Int           @map(\"price_cents\")\n  stripePaymentIntentId String?       @map(\"stripe_payment_intent_id\")\n  gcalEventId           String?       @map(\"gcal_event_id\")\n  createdAt             DateTime      @default(now()) @map(\"created_at\")\n\n  service  Service   @relation(fields: [serviceId], references: [id])\n  payments Payment[]\n  smsLogs  SmsLog[]\n\n  @@map(\"booking\")\n}\n\nmodel Unavailability {\n  id         String   @id @default(cuid())\n  startAtUtc DateTime @map(\"start_at_utc\")\n  endAtUtc   DateTime @map(\"end_at_utc\")\n  reason     String?\n\n  @@map(\"unavailability\")\n}\n\nmodel SmsLog {\n  id        String       @id @default(cuid())\n  bookingId String?      @map(\"booking_id\")\n  direction SmsDirection\n  toNumber  String       @map(\"to_number\")\n  body      String\n  status    String?\n  createdAt DateTime     @default(now()) @map(\"created_at\")\n\n  booking Booking? @relation(fields: [bookingId], references: [id])\n\n  @@map(\"sms_log\")\n}\n\nmodel Payment {\n  id          String    @id @default(cuid())\n  bookingId   String    @map(\"booking_id\")\n  amountCents Int       @map(\"amount_cents\")\n  status      String\n  providerRef String?   @map(\"provider_ref\")\n  paidAt      DateTime? @map(\"paid_at\")\n\n  booking Booking @relation(fields: [bookingId], references: [id], onDelete: Cascade)\n\n  @@map(\"payment\")\n}\n\nenum BookingStatus {\n  pending\n  pending_payment\n  confirmed\n  cancelled\n  payment_failed\n}\n\nenum SmsDirection {\n  inbound\n  outbound\n}\n",
  "inlineSchemaHash": "9d812ea037e95d643bfa988888d35498f602a80f6bd954636b37a0d422cdc94f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationMin\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duration_min\"},{\"name\":\"basePriceCents\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"base_price_cents\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToService\"}],\"dbName\":\"service\"},\"AddOn\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceCents\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"price_cents\"},{\"name\":\"durationMin\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duration_min\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":\"addon\"},\"Booking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"customer_name\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"service_id\"},{\"name\":\"addOnIds\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"add_on_ids\"},{\"name\":\"startAtUtc\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_at_utc\"},{\"name\":\"endAtUtc\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_at_utc\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BookingStatus\"},{\"name\":\"priceCents\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"price_cents\"},{\"name\":\"stripePaymentIntentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"stripe_payment_intent_id\"},{\"name\":\"gcalEventId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gcal_event_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"BookingToService\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"BookingToPayment\"},{\"name\":\"smsLogs\",\"kind\":\"object\",\"type\":\"SmsLog\",\"relationName\":\"BookingToSmsLog\"}],\"dbName\":\"booking\"},\"Unavailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startAtUtc\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_at_utc\"},{\"name\":\"endAtUtc\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_at_utc\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"unavailability\"},\"SmsLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"booking_id\"},{\"name\":\"direction\",\"kind\":\"enum\",\"type\":\"SmsDirection\"},{\"name\":\"toNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"to_number\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToSmsLog\"}],\"dbName\":\"sms_log\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"booking_id\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"amount_cents\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerRef\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_ref\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"paid_at\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToPayment\"}],\"dbName\":\"payment\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

